[
  {
    "title": "Next.js로 구현하는 로그인",
    "date": "2025월 03월 12일 11:58",
    "categories": [
      "Dev",
      "Next"
    ],
    "tags": [
      "Nextjs",
      "로그인",
      "Lucia"
    ],
    "series": "Next 스터디",
    "excerpt": "웹에서 인증은 필수적인 기능이다. 사용자의 데이터를 보호하고, 로그인한 사용자만 특정 기능을 이용할 수 있도록 제한하는 것이 중요하다.",
    "thumbnail": "https://www.howu.run/image/next-login/thumbnail.svg"
  },
  {
    "title": "React-Router-Dom 로더와 액션",
    "date": "2025월 02월 26일 03:44",
    "categories": [
      "Dev",
      "Next"
    ],
    "tags": [
      "Nextjs",
      "Loader",
      "Action"
    ],
    "series": "Next 스터디",
    "excerpt": "Loader와 Action이 나오기 전인 React Router DOM v6.4 이전에는 라우팅과 데이터 페칭이 완전히 분리되어 있었습니다. 라우터는 단순히 URL에 따라 어떤 컴포넌트를 렌더링할지만 결정했고, 데이터 로딩은 각 컴포넌트의 책임이었습니다.",
    "thumbnail": "https://www.howu.run/image/React-Router-Dom/thumbnail.webp"
  },
  {
    "title": "_document란-무엇일까",
    "date": "2025월 03월 19일 16:37",
    "categories": [
      "Deb",
      "Next"
    ],
    "tags": [
      "Nextjs",
      "SEO"
    ],
    "series": "Next 스터디",
    "excerpt": "Next.js에서는 애플리케이션의 모든 페이지가 React 컴포넌트로 이루어져 있지만, 기본적으로 HTML의 <html>, <head>, <body> 태그 같은 구조는 자동으로 생성됩니다. 하지만 때로는 이러한 구조를 커스터마이징할 필요가 있을 때가 있습니다. 바로 이때 사용하는 파일이 _document.js입니다.",
    "thumbnail": "https://www.howu.run/image/_document란-무엇일까/thumbnail.webp"
  },
  {
    "title": "서버 컴포넌트 vs 클라이언트 컴포넌트",
    "date": "2025월 03월 04일 21:16",
    "categories": [
      "Dev",
      "Next"
    ],
    "tags": [
      "Nextjs",
      "서버 컴포넌트",
      "클라이언트 컴포넌트"
    ],
    "series": "Next 스터디",
    "excerpt": "강의를 듣다 저번 Nextjs 프로젝트 할때 가장 어려웠던 서버 컴포넌트와 클라이언트 컴포넌트에 대한 내용이 나왔다. 넥스트로 프로젝트를 처음해봤어서 편하다는 이유로 최상단 루트에 클라이언트 컴포넌트를 선언하고 개발을 진행했다. 그리고 개발이 다 끝나고 나서야 알았다. 이게 얼마나 멍청한 짓이였는지를..",
    "thumbnail": "https://www.howu.run/image/ScVsCc/thumbnail.webp"
  }
]